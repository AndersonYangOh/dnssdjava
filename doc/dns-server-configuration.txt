
DNS Server Configuration
========================

To use DNS-SD the name server must be configured. Two things needs to be
done, enabling dynamic updates so services can be added and removed, and
adding records for automatic discovery so clients can find services without
further configuration.

This document describes how to configure the BIND name server. Other name
servers should be similar.


Enabling Dynamic Updates
------------------------

To allow service registration the name server must be configured for
dynamic DNS updates [rfc2136]. You can use a completely separate DNS server
to handle the dynamic updates or just use a separate zone in your normal
DNS server. The setup is very similar in both cases.

Add a new zone in "/etc/named.conf" on the server handling the dynamic
updates. Something like this:

zone "services.example.com" {
    type master;
    file "services.example.com.zone";
    allow-update { key key.host1.example.com.; };
};

The example zone file can be found in the "examples" directory. The
allow-update section is the important part that enables those that know the
secret key to update the zone. The key is used to authenticate updates using
TSIG [rfc2845]. The key can be generated by the following command:

dnssec-keygen -a HMAC-MD5 -b 128 -n HOST host1.example.com.

The command generates a file names "Khost1.example.com.+157+#####.key" which
contains the key. Copy the key into "/etc/named.conf" in a new key section
like this (the key is the quoted part, it is base64 encoded):

key key.host1.example.com. {
    algorithm hmac-md5;
    secret "U8UZmf4ebT2q+KlUjevvwg==";
};

Now you are done enabling dynamic updates.


Adding DNS Records for Automatic Discovery
------------------------------------------

Some records needs to be added to enable clients to find the domains for
browsing and registration. With these records in place no configuration needs
to be provided to the clients, they get everything from the DNS server.

The special records are PTR records for these names:
b._dns-sd._udp.<domain>
db._dns-sd._udp.<domain>
lb._dns-sd._udp.<domain>
r._dns-sd._udp.<domain>
dr._dns-sd._udp.<domain>
Each PTR record should point to the domain to use for that function. The
functions are: "b" for browsing domains (there can be multiple PTR records,
"db" for the default browsing domain, "lb" for legacy browsing domains,
"r" for registration domains and finally "dr" for the default registration
domain. 

A client looks for these special records in its own domain, eg. an application
running on the computer "host1.example.com." will look for records ending in
"example.com.". If that fails or the computer doesn't have a domain name then
the client looks in the reverse zone for the network address (formed by taking
the bitwise AND of the IP-address and the netmask). For example a client
running on a computer with IP-address 192.168.1.11/24 will look for records
ending in "0.1.168.192.in-addr.arpa.".

Example forward and reverse zone-files can be found in the examples directory.
